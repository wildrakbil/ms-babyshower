{
    "sourceFile": "server/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1720103720980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720129314212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,17 @@\n const app = express();\n const PORT = process.env.PORT || 8088;\n const DATA_FILE = './gifts.json';\n \n+const cors = require('cors');\n+\n+const corsOptions = {\n+  origin: 'https://babyshower.z13.web.core.windows.net',\n+  optionsSuccessStatus: 200\n+};\n+\n+app.use(cors(corsOptions));\n+\n // Middleware para analizar cuerpos de solicitud JSON\n app.use(bodyParser.json());\n \n // Middleware para permitir CORS (solo para desarrollo, en producción configurar correctamente)\n"
                },
                {
                    "date": 1720130069411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,8 @@\n const app = express();\n const PORT = process.env.PORT || 8088;\n const DATA_FILE = './gifts.json';\n \n-const cors = require('cors');\n-\n-const corsOptions = {\n-  origin: 'https://babyshower.z13.web.core.windows.net',\n-  optionsSuccessStatus: 200\n-};\n-\n-app.use(cors(corsOptions));\n-\n // Middleware para analizar cuerpos de solicitud JSON\n app.use(bodyParser.json());\n \n // Middleware para permitir CORS (solo para desarrollo, en producción configurar correctamente)\n"
                },
                {
                    "date": 1720130180985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,22 @@\n const express = require('express');\n const bodyParser = require('body-parser');\n const fs = require('fs');\n+const cors = require('cors');\n \n const app = express();\n const PORT = process.env.PORT || 8088;\n const DATA_FILE = './gifts.json';\n \n // Middleware para analizar cuerpos de solicitud JSON\n app.use(bodyParser.json());\n \n-// Middleware para permitir CORS (solo para desarrollo, en producción configurar correctamente)\n-app.use((req, res, next) => {\n-  res.setHeader('Access-Control-Allow-Origin', '*');\n-  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n-  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n-  next();\n-});\n+// Middleware para permitir CORS\n+app.use(cors({\n+  origin: 'https://babyshower.z13.web.core.windows.net', // Tu dominio de front-end\n+  methods: 'GET, POST, PUT, DELETE',\n+  allowedHeaders: 'Content-Type'\n+}));\n \n // Ruta GET para obtener todos los regalos\n app.get('/ms-event-producer/gift', (req, res) => {\n   fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n"
                },
                {
                    "date": 1720139855591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n const express = require('express');\n const bodyParser = require('body-parser');\n const fs = require('fs');\n const cors = require('cors');\n+const lockfile = require('lockfile');\n \n const app = express();\n const PORT = process.env.PORT || 8088;\n const DATA_FILE = './gifts.json';\n"
                },
                {
                    "date": 1720140048226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,44 +31,64 @@\n });\n \n // Ruta PUT para actualizar un regalo por su ID\n app.put('/ms-event-producer/gift/:id', (req, res) => {\n-    const { id } = req.params;\n-    const { name, isEdit } = req.body;\n-  \n+  const { id } = req.params;\n+  const { name, isEdit } = req.body;\n+\n+  lockfile.lock(DATA_FILE, { retries: 10 }, (err) => {\n+    if (err) {\n+      console.error('Error locking file:', err);\n+      res.status(500).json({ error: 'Internal server error' });\n+      return;\n+    }\n+\n     fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n       if (err) {\n         console.error('Error reading file:', err);\n+        lockfile.unlock(DATA_FILE, err => {\n+          if (err) console.error('Error unlocking file:', err);\n+        });\n         res.status(500).json({ error: 'Internal server error' });\n         return;\n       }\n-  \n+\n       let gifts = JSON.parse(data);\n       const index = gifts.findIndex(gift => gift.id === parseInt(id));\n       if (index === -1) {\n+        lockfile.unlock(DATA_FILE, err => {\n+          if (err) console.error('Error unlocking file:', err);\n+        });\n         res.status(404).json({ error: 'Gift not found' });\n         return;\n       }\n-  \n+\n       // Actualiza el nombre y el estado de edición del regalo\n       gifts[index].name = name;\n       gifts[index].isEdit = isEdit;\n-  \n+\n       // Escribe los cambios en el archivo JSON\n       fs.writeFile(DATA_FILE, JSON.stringify(gifts, null, 2), 'utf8', err => {\n         if (err) {\n           console.error('Error writing file:', err);\n+          lockfile.unlock(DATA_FILE, err => {\n+            if (err) console.error('Error unlocking file:', err);\n+          });\n           res.status(500).json({ error: 'Internal server error' });\n           return;\n         }\n-  \n+\n+        lockfile.unlock(DATA_FILE, err => {\n+          if (err) console.error('Error unlocking file:', err);\n+        });\n+\n         // Retorna el regalo actualizado como respuesta\n         res.json(gifts[index]);\n       });\n     });\n   });\n-  \n+});\n \n // Configuración para escuchar el puerto\n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720140765072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,20 @@\n         res.status(500).json({ error: 'Internal server error' });\n         return;\n       }\n \n-      let gifts = JSON.parse(data);\n+      let gifts;\n+      try {\n+        gifts = JSON.parse(data);\n+      } catch (parseError) {\n+        console.error('Error parsing JSON:', parseError);\n+        lockfile.unlock(DATA_FILE, err => {\n+          if (err) console.error('Error unlocking file:', err);\n+        });\n+        res.status(500).json({ error: 'Internal server error' });\n+        return;\n+      }\n+\n       const index = gifts.findIndex(gift => gift.id === parseInt(id));\n       if (index === -1) {\n         lockfile.unlock(DATA_FILE, err => {\n           if (err) console.error('Error unlocking file:', err);\n@@ -90,5 +101,5 @@\n \n // Configuración para escuchar el puerto\n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n\\ No newline at end of file\n+});\n"
                },
                {
                    "date": 1720141650598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,18 +36,18 @@\n   const { name, isEdit } = req.body;\n \n   lockfile.lock(DATA_FILE, { retries: 10 }, (err) => {\n     if (err) {\n-      console.error('Error locking file:', err);\n+      console.error('Error locking file to lock:', err);\n       res.status(500).json({ error: 'Internal server error' });\n       return;\n     }\n \n     fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n       if (err) {\n         console.error('Error reading file:', err);\n         lockfile.unlock(DATA_FILE, err => {\n-          if (err) console.error('Error unlocking file:', err);\n+          if (err) console.error('Error unlocking file to readFile:', err);\n         });\n         res.status(500).json({ error: 'Internal server error' });\n         return;\n       }\n@@ -57,18 +57,18 @@\n         gifts = JSON.parse(data);\n       } catch (parseError) {\n         console.error('Error parsing JSON:', parseError);\n         lockfile.unlock(DATA_FILE, err => {\n-          if (err) console.error('Error unlocking file:', err);\n+          if (err) console.error('Error unlocking file to JSON.parse:', err);\n         });\n         res.status(500).json({ error: 'Internal server error' });\n         return;\n       }\n \n       const index = gifts.findIndex(gift => gift.id === parseInt(id));\n       if (index === -1) {\n         lockfile.unlock(DATA_FILE, err => {\n-          if (err) console.error('Error unlocking file:', err);\n+          if (err) console.error('Error unlocking file to findIndex:', err);\n         });\n         res.status(404).json({ error: 'Gift not found' });\n         return;\n       }\n@@ -81,16 +81,16 @@\n       fs.writeFile(DATA_FILE, JSON.stringify(gifts, null, 2), 'utf8', err => {\n         if (err) {\n           console.error('Error writing file:', err);\n           lockfile.unlock(DATA_FILE, err => {\n-            if (err) console.error('Error unlocking file:', err);\n+            if (err) console.error('Error unlocking file to writeFile:', err);\n           });\n           res.status(500).json({ error: 'Internal server error' });\n           return;\n         }\n \n         lockfile.unlock(DATA_FILE, err => {\n-          if (err) console.error('Error unlocking file:', err);\n+          if (err) console.error('Error unlocking file: to final unlock', err);\n         });\n \n         // Retorna el regalo actualizado como respuesta\n         res.json(gifts[index]);\n"
                }
            ],
            "date": 1720103720980,
            "name": "Commit-0",
            "content": "const express = require('express');\nconst bodyParser = require('body-parser');\nconst fs = require('fs');\n\nconst app = express();\nconst PORT = process.env.PORT || 8088;\nconst DATA_FILE = './gifts.json';\n\n// Middleware para analizar cuerpos de solicitud JSON\napp.use(bodyParser.json());\n\n// Middleware para permitir CORS (solo para desarrollo, en producción configurar correctamente)\napp.use((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\n\n// Ruta GET para obtener todos los regalos\napp.get('/ms-event-producer/gift', (req, res) => {\n  fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Error reading file:', err);\n      res.status(500).json({ error: 'Internal server error' });\n      return;\n    }\n    res.json(JSON.parse(data));\n  });\n});\n\n// Ruta PUT para actualizar un regalo por su ID\napp.put('/ms-event-producer/gift/:id', (req, res) => {\n    const { id } = req.params;\n    const { name, isEdit } = req.body;\n  \n    fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n      if (err) {\n        console.error('Error reading file:', err);\n        res.status(500).json({ error: 'Internal server error' });\n        return;\n      }\n  \n      let gifts = JSON.parse(data);\n      const index = gifts.findIndex(gift => gift.id === parseInt(id));\n      if (index === -1) {\n        res.status(404).json({ error: 'Gift not found' });\n        return;\n      }\n  \n      // Actualiza el nombre y el estado de edición del regalo\n      gifts[index].name = name;\n      gifts[index].isEdit = isEdit;\n  \n      // Escribe los cambios en el archivo JSON\n      fs.writeFile(DATA_FILE, JSON.stringify(gifts, null, 2), 'utf8', err => {\n        if (err) {\n          console.error('Error writing file:', err);\n          res.status(500).json({ error: 'Internal server error' });\n          return;\n        }\n  \n        // Retorna el regalo actualizado como respuesta\n        res.json(gifts[index]);\n      });\n    });\n  });\n  \n\n// Configuración para escuchar el puerto\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});\n"
        }
    ]
}