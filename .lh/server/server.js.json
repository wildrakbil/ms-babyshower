{
    "sourceFile": "server/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1720103720980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1720103720980,
            "name": "Commit-0",
            "content": "const express = require('express');\nconst bodyParser = require('body-parser');\nconst fs = require('fs');\n\nconst app = express();\nconst PORT = process.env.PORT || 8088;\nconst DATA_FILE = './gifts.json';\n\n// Middleware para analizar cuerpos de solicitud JSON\napp.use(bodyParser.json());\n\n// Middleware para permitir CORS (solo para desarrollo, en producción configurar correctamente)\napp.use((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\n\n// Ruta GET para obtener todos los regalos\napp.get('/ms-event-producer/gift', (req, res) => {\n  fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Error reading file:', err);\n      res.status(500).json({ error: 'Internal server error' });\n      return;\n    }\n    res.json(JSON.parse(data));\n  });\n});\n\n// Ruta PUT para actualizar un regalo por su ID\napp.put('/ms-event-producer/gift/:id', (req, res) => {\n    const { id } = req.params;\n    const { name, isEdit } = req.body;\n  \n    fs.readFile(DATA_FILE, 'utf8', (err, data) => {\n      if (err) {\n        console.error('Error reading file:', err);\n        res.status(500).json({ error: 'Internal server error' });\n        return;\n      }\n  \n      let gifts = JSON.parse(data);\n      const index = gifts.findIndex(gift => gift.id === parseInt(id));\n      if (index === -1) {\n        res.status(404).json({ error: 'Gift not found' });\n        return;\n      }\n  \n      // Actualiza el nombre y el estado de edición del regalo\n      gifts[index].name = name;\n      gifts[index].isEdit = isEdit;\n  \n      // Escribe los cambios en el archivo JSON\n      fs.writeFile(DATA_FILE, JSON.stringify(gifts, null, 2), 'utf8', err => {\n        if (err) {\n          console.error('Error writing file:', err);\n          res.status(500).json({ error: 'Internal server error' });\n          return;\n        }\n  \n        // Retorna el regalo actualizado como respuesta\n        res.json(gifts[index]);\n      });\n    });\n  });\n  \n\n// Configuración para escuchar el puerto\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});\n"
        }
    ]
}